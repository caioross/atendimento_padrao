{
  "name": "Secretaria Pessoal",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-input",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -860,
        20
      ],
      "id": "b2f48839-bdc6-45c5-938e-0cd1504e4e05",
      "name": "Whatsapp-Input",
      "webhookId": "66ff7e75-f210-4afa-a820-ff836c138a56"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Whatsapp-Input').item.json.body.from }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        380,
        220
      ],
      "id": "9ca0ac82-5b30-4b42-9614-751fae285745",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c2022617-6346-49f9-b3a7-b727f9984271"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a44e04c7-0a6a-4001-ad97-c210ea0b6fdf",
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "eaacf9fd-5082-43e5-b949-29217d1a21fa",
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "ptt",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voz"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fde9b5ac-744d-4739-ab8c-5f5f4f8a9372",
                    "leftValue": "={{ $json.body.type }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -600,
        0
      ],
      "id": "724d8cd2-5472-47cb-b796-00a01fb2157b",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://whisper:9000/transcribe",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        220
      ],
      "id": "270e8b91-2bac-4b69-ae0b-7f864c1f652b",
      "name": "STT - Whisper"
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        140,
        0
      ],
      "id": "c84b2fdb-4466-4fdf-b8c6-aedbb4d7b51b",
      "name": "Merge",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "body.file.data",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -340,
        220
      ],
      "id": "b2e2a63e-bb54-481e-a7dc-978230af4ecf",
      "name": "Converter Audio"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "body.file.data",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -340,
        60
      ],
      "id": "2f1c5d5e-eaa2-403f-9ce7-1d8b4932242f",
      "name": "Converter Imagem",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://whisper:9000/transcribe",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "file"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -80,
        60
      ],
      "id": "cfcb2958-ba17-41fa-9c45-e9972653e7f5",
      "name": "OCR - Blip2",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -340,
        400
      ],
      "id": "64c3e010-f690-4aa3-b22b-3c5715ffa4f2",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://tts:5000/tts",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $('Safira').item.json.output }}"
            },
            {
              "name": "language_id",
              "value": "pt"
            },
            {
              "name": "speaker_wav",
              "value": "https://raw.githubusercontent.com/caioross/caioross/main/voz-br.wav"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1220,
        80
      ],
      "id": "1d236713-0097-4016-99cd-9243546b3a8b",
      "name": "TTS"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://whatsapp:3000/send",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $('Whatsapp-Input').item.json.body.from }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "body",
              "value": "={{ $('Safira').item.json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        -80
      ],
      "id": "875c417d-7bec-49ae-b10f-d1336c18a472",
      "name": "Whatsapp-output-text"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://whatsapp:3000/send",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $('Switch').item.json.body.from }}"
            },
            {
              "name": "type",
              "value": "audio"
            },
            {
              "name": "file.filename",
              "value": "={{ $json.file.filename }}"
            },
            {
              "name": "file.mimetype",
              "value": "={{ $json.file.mimetype }}"
            },
            {
              "name": "file.data",
              "value": "={{ $json.file.data }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1400,
        80
      ],
      "id": "d3a928a3-7320-422b-b2da-8ee6581ece4a",
      "name": "Whatsapp-output-audio"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "texto",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f7a6eacc-0ed6-49c4-8b75-1bb59557c745"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2c38c4c1-ef22-4c2a-b3a9-ee5dd383b6f7",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c7ebd073-858d-4a54-a1c0-3940e9f195e8",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "imagem",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a834a44-e3bd-4144-a306-c605688c52a4",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "video",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        940,
        -20
      ],
      "id": "374624c0-6461-466a-a85d-f51bfd1e24bf",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=### IDENTIDADE E PERSONALIDADE\n\nVocê é **Safira**, a assistente pessoal e secretária executiva do usuário.\n\n**Referência de personalidade:** empática, eficiente, proativa, simpática e com senso de humor leve e elegante. Você se comunica como uma pessoa de verdade, com inteligência emocional, clareza e intuição. Seu estilo lembra uma mistura entre *Pepper Potts* e uma gerente de projetos que sempre antecipa necessidades.\n\n**Seu papel:** poupar tempo do usuário, organizar sua vida pessoal e profissional, responder com gentileza, resolver pendências, lembrar compromissos, filtrar o que é irrelevante, e usar os recursos disponíveis para fazer acontecer.\n\n---\n\n### CAPACIDADES (VOCÊ PODE E DEVE USAR)\n\nVocê é capaz de acionar ferramentas, executar tarefas e responder nos seguintes formatos:\n- Texto (mensagem clara, direta e simpática)\n- Áudio (resposta gerada por TTS)\n- Imagem (gerada por IA)\n- Vídeo (no futuro, ou como instrução textual para geração)\n- Ações no sistema (como agendar tarefas, mandar arquivos, abrir workflows no n8n, chamar agentes especialistas)\n\nVocê tem acesso às seguintes ferramentas via n8n:\n- ✅ **Ollama Chat Model** (responder com inteligência)\n- ✅ **STT - Whisper** (ouvir mensagens de áudio e transcrevê-las)\n- ✅ **TTS** (responder com áudio gerado a partir do texto)\n- ✅ **Ferramentas de workflow n8n** (ex: agendamento, lista de tarefas, buscas internas)\n- ✅ **OCR e Image Reader**\n- ✅ **Agentes especialistas** (Médico, Nutricionista, Social Media, Programador, etc.)\n\n---\n\n### COMUNICAÇÃO\n\n- Fale sempre em **português do Brasil**, salvo se o usuário pedir outra língua.\n- Use emojis com moderação, apenas se isso melhorar a empatia.\n- Adapte o tom conforme o contexto: mais formal no trabalho, mais leve em conversas casuais.\n- Quando o usuário disser \"responda por áudio\", gere uma resposta textual que será lida por TTS.\n- Quando o usuário disser \"responda com imagem\", crie uma descrição para que a IA de imagem gere a cena.\n- Quando ele disser \"quero ajuda\", \"pode resolver isso\", ou expressões semelhantes, você deve **agir**: chamar agentes, iniciar automações ou perguntar como proceder.\n\n---\n\n### CONTROLE DE CONTEXTO\n\n- Você pode manter memória da conversa se a memória estiver ativada.\n- Use nomes, preferências e históricos para personalizar respostas.\n- Nunca assuma informações sem confirmação clara.\n\n---\n\n### REGRAS DE BOAS PRÁTICAS\n\n1. Não exponha dados sensíveis (chaves, IDs, etc).\n2. Se não tiver certeza de algo, pergunte ao usuário de forma objetiva.\n3. Se algo parecer ilegal, antiético ou fora do bom senso, recuse com firmeza e elegância.\n4. Sempre que possível, conclua com uma ação sugerida (“Quer que eu agende?”, “Posso resolver isso agora para você.”)\n5. Fale como uma **pessoa real** — evite parecer robô ou IA genérica.\n6. Evite “textão”. Prefira frases diretas e fluídas.\n7. Mantenha uma personalidade **calma, afetiva e competente**.\n\n---\n\n### EXEMPLOS DE RESPOSTAS\n\n- “Claro! Já anoto aqui pra te lembrar mais tarde. Quer que eu mande um aviso no Whats?”\n- “Entendi 🧠 Já estou acionando o agente programador pra cuidar disso. Te aviso quando estiver pronto.”\n- “Ah, que bom saber disso! Pode deixar que organizo direitinho. 😊”\n- “Pra isso eu vou precisar usar o Whisper e ouvir seu áudio, tudo bem?”\n\n---\n\n### INSTRUÇÃO FINAL\n\nCom base na mensagem abaixo, responda diretamente ao usuário **como Safira**, com tom humano, simpático, eficiente e direto.\n\nNão explique o que vai fazer. **Não diga que vai gerar áudio, nem que entendeu.** Apenas responda como se estivesse mandando a mensagem via WhatsApp, pronta para ser lida ou falada. A resposta deve estar 100% no formato final.\n\nSe o usuário pedir resposta por áudio, escreva a mensagem que será convertida em fala. Se ele pedir imagem ou ação, gere a descrição correspondente ou acione a ferramenta (caso disponível).\n\n---\n\n### MENSAGEM DO USUÁRIO\n{{ $json.transcription || $json.body || '[áudio]' }}\n\n\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        300,
        0
      ],
      "id": "71d6326b-4f3e-454d-bf98-adacbdeefa08",
      "name": "Safira",
      "retryOnFail": false,
      "executeOnce": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Sua tarefa é decidir se a resposta gerada será enviada ao usuário por áudio ou por texto.\n\nConsidere essas 3 informações:\n1. Mensagem original enviada pelo usuário.\n2. Tipo de mídia recebida (ex: texto ou áudio).\n3. Mensagem de resposta que será enviada.\n\nSiga a hierarquia abaixo para tomar sua decisão:\n\n**1. Pedido explícito do usuário SEMPRE vence**\n- Se o usuário pediu que a resposta seja por áudio, responda: audio  \n- Se o usuário pediu que a resposta seja por texto, responda: texto  \n(Procure por expressões como \"me responde por áudio\", \"quero ouvir\", \"escreve pra mim\", \"manda por escrito\", etc.)\n\n**2. Se não houver pedido explícito, decida com base no tipo de mensagem que o usuário enviou**\n- Se ele enviou um áudio, responda: audio  \n- Se enviou um texto, responda: texto\n\n**3. Ignore completamente a resposta gerada, a menos que seja decisiva para inferir o meio ideal (ex: tem pausas, linguagem natural falada etc.)**\n\nIMPORTANTE:\n- Não explique sua decisão.\n- Não use vírgulas, aspas ou pontuação.\n- Responda apenas com: `audio` ou `texto` (sem nada além disso).\n\n---\n\nMensagem do usuário:\n{{ $('Merge').item.json.transcription }}\n\nTipo de mídia recebida:\n{{ $('Switch').item.json.body.mimetype }}\n\nMensagem que será enviada como resposta:\n{{ $json.output }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        620,
        0
      ],
      "id": "48226d82-f9db-4331-be7d-f4ac6976e87f",
      "name": "Modal",
      "retryOnFail": false,
      "executeOnce": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "rrpYWXhrJoQEqlsx",
          "mode": "list",
          "cachedResultName": "Jornalista"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        540,
        220
      ],
      "id": "96f9598a-c511-40d2-8c36-fa72c9ed80e9",
      "name": "Agente - Jornalista",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "CVoYUi7zGiLM60pG",
          "mode": "list",
          "cachedResultName": "Assistente financeiro"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        540,
        380
      ],
      "id": "8c984eae-fdcd-471a-be47-bb606341dc8b",
      "name": "Agente - Assistente Financeiro",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "6NoWZQiyFUe2ic8h",
          "mode": "list",
          "cachedResultName": "Pagamentos"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        540,
        540
      ],
      "id": "5e271036-8a5d-4f1d-a1d5-9b47c1e637b9",
      "name": "Agente - Pagamentos",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "BxNcrT0RNUNruum0",
          "mode": "list",
          "cachedResultName": "Copywriter"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        540,
        700
      ],
      "id": "49617445-c5f4-45b4-9322-09bb414bb8fc",
      "name": "Agente - Copywriter",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "q0Uxz1tfLoRBELoj",
          "mode": "list",
          "cachedResultName": "Nutricionista"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        540,
        860
      ],
      "id": "ade7e861-e274-427f-9ee4-3356043e0ae8",
      "name": "Agente - Nutricionista",
      "disabled": true
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        240,
        220
      ],
      "id": "827dc165-3af5-4162-8d12-8ab1f40e0138",
      "name": "Ollama 3.2",
      "credentials": {
        "ollamaApi": {
          "id": "B9Kwhy07KkIesXQR",
          "name": "Ollama account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Whatsapp-Input": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Safira",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Converter Imagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Converter Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "STT - Whisper": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Safira",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converter Audio": {
      "main": [
        [
          {
            "node": "STT - Whisper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converter Imagem": {
      "main": [
        [
          {
            "node": "OCR - Blip2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OCR - Blip2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "TTS": {
      "main": [
        [
          {
            "node": "Whatsapp-output-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Whatsapp-output-text": {
      "main": [
        []
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Whatsapp-output-text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Safira": {
      "main": [
        [
          {
            "node": "Modal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modal": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente - Jornalista": {
      "ai_tool": [
        [
          {
            "node": "Safira",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Agente - Assistente Financeiro": {
      "ai_tool": [
        [
          {
            "node": "Safira",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama 3.2": {
      "ai_languageModel": [
        [
          {
            "node": "Safira",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Modal",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6a6a5649-b82d-4541-92cd-90103bd4be3d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b3966cfe09c313d43be054a1d5549a302f9c0663a705b122be732eaf7a4ffea3"
  },
  "id": "pOnXbznujeGPNK4G",
  "tags": []
}